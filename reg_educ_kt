import requests
url_1 = "https://api.coffefound.tcl.zendo.cloud"
url_register = "/api/v1/register"
url_auf = "/api/v1/login"
url_acc = "/api/v1/user/finance/accounts"
url_money = "/api/v1/admin/finance/operations/user-transfer"

admin_login ="admin"
admin_password = "Pof0Weg7Nam1Xuv1Rer9"
inviter = "admin"
password = "123456"
headers =  register_headers = {
            'Content-Type': 'application/json;charset=UTF-8',
            'Accept': 'application/json, text/plain, /'
        }

# Шаг 1. Создаем пользователя.
class UserGenerator:  # Гениратор пользователей. Нужно настраивать
    def generate_login(self, index):
        return "q100" + str(0 + index) #настрой окончание  логина position1test

    def generate_users(self, count):
        for i in range(count):
            login = self.generate_login(i)
            self.create_user(login)

    def create_user(self, login):
        data = {
            "password": password,
            "username": login,
            "sponsor_username": inviter,
            'password_confirmation':"123456",
            "email": login + "@gmail.com",
            "agreement": "true",
            "has_sponsor": 1,
            "last_name": "Бонд",
            "first_name":"Джеймс",
            'phone':"+380636038450",
            "country_id": "690791",
            "position": "1"


        }
        print("шаг 1 Создание пользователя")
        post_registr = requests.post(url=url_1+url_register, headers=register_headers, json=data)
        if post_registr.status_code == 201:
            print(post_registr.status_code)
            print(f"User--- {login} ---created successfully")
        else:
            print(f"Failed to create user {login}")
            print(post_registr.status_code)
            print(post_registr.json())

# автооризация созданым юзером, узнаем id основного кошелька.
        body_1 = {

            "login": login,
            "password": password
        }

        print("Шаг 2.  Авторизация клиентом")
        print("____________________________________________________________________________________________")
        post_1 = requests.post(url=url_1+url_auf, headers=register_headers, json=body_1)
        assert 200 == post_1.status_code
        if post_1.status_code == 200:
            print("статус код =", post_1.status_code)
            print("------------")
        else:
            print("case is not working")
        token_1 = post_1.json()['data']['token']
        register_headers_2 = \
            {
                'Authorization': f'Bearer {token_1}',
                'Content-Type': 'application/json;charset=UTF-8',
                'Accept': 'application/json, text/plain, /'
            }
        print("Узнаем аккаунт пользователя")
        get_1 = requests.get(url=url_1+url_acc, headers=register_headers_2)
        assert 200 == post_1.status_code
        if get_1.status_code == 200:
            get_1 = get_1.json()
        account_main = None
        for account in get_1['data']:
            if account['name'] == "Основной счет EUR":
                account_main = account['id']  # account_ustd_main  это переменная которую система использует как номер счета
                break
        print("Аккаунт для пополнения основного счета = id ", account_main)

        url_lessons_147 = url_1 + "/api/v1/user/education/lessons/148"
        url_lessons_148 = url_1 + "/api/v1/user/education/lessons/147"
        partnership = "https://api.coffefound.tcl.zendo.cloud/api/v1/user/marketing/partnership"

        post_lessons_1 = requests.post(url=url_lessons_147, headers=register_headers_2)
        print(post_lessons_1)
        post_lessons_2 = requests.post(url=url_lessons_148, headers=register_headers_2)
        print(post_lessons_2)
        post_partnership = requests.post(url=partnership, headers=register_headers_2)
        print(post_partnership)


        print("--------------------------")



# Использование класса UserGenerator для создания 10 пользователей
generator = UserGenerator()
generator.generate_users(1)
